<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.train.course.mapper.TrainCourseDirectoryMapper">

	<resultMap type="TrainCourseDirectory" id="TrainCourseDirectoryResult">
		<id     property="id"     column="id"/>
		<result property="parentId"   column="parent_id"/>
		<result property="parentIds"  column="parent_ids"/>
		<result property="name"   column="name"/>
		<result property="orderNum"   column="order_num"/>
		<result property="parentName"   column="parent_name"/>
		<result property="delFlag"    column="del_flag"/>
		<result property="status" column="status"/>
		<result property="createBy"   column="create_by"/>
		<result property="createTime" column="create_time"/>
		<result property="updateBy"   column="update_by"/>
		<result property="updateTime" column="update_time"/>
	</resultMap>
	
	<sql id="selectDirectoryVo">
        select d.id, d.parent_id, d.parent_ids, d.name, d.order_num, d.status, d.del_flag, d.create_by, d.create_time
        from train_course_directory d
    </sql>
	<select id="selectRoleDirectoryTree" parameterType="Long" resultType="String">
		select concat(d.id, d.name) as name
		from train_course_directory d
			left join sys_role_dept rd on d.id = rd.id
		where d.del_flag = '0' and rd.role_id = #{roleId}
		order by d.parent_id, d.order_num
	</select>
	
	<select id="selectAllDirectoryList" parameterType="TrainCourseDirectory" resultMap="TrainCourseDirectoryResult">
        <include refid="selectDirectoryVo"/>
        where d.del_flag = '0'
        <if test="parentId != null and parentId != 0">
			AND parent_id = #{parentId}
		</if>
		<if test="name != null and name != ''">
			AND name like concat('%', #{name}, '%')
		</if>
		ORDER BY order_num asc;

		<!-- 数据范围过滤 -->
		${params.dataScope}
    </select>

	<select id="selectDirectoryList" parameterType="TrainCourseDirectory" resultMap="TrainCourseDirectoryResult">
		<include refid="selectDirectoryVo"/>
		where d.del_flag = '0' AND d.status = 0
		<if test="parentId != null and parentId != 0">
			AND parent_id = #{parentId}
		</if>
		<if test="name != null and name != ''">
			AND name like concat('%', #{name}, '%')
		</if>
		ORDER BY order_num asc;
		<!-- 数据范围过滤 -->
		${params.dataScope}
	</select>

	<select id="checkDirectoryExistCourse" parameterType="Long" resultType="int">
		select count(1) from train_course_section where
		directory_id IN (SELECT  id FROM train_course_directory WHERE FIND_IN_SET(#{id}, parent_ids) OR id = #{id} AND del_flag = '0') and del_flag = '0'
	</select>

	<select id="selectDirectoryCount" parameterType="TrainCourseDirectory" resultType="int">
		select count(1) from train_course_directory
		where del_flag = '0'
		<if test="id != null and id != 0"> and id = #{id} </if>
		<if test="parentId != null and parentId != 0"> and parent_id = #{parentId} </if>
	</select>
	
	<select id="checkDirectoryNameUnique" resultMap="TrainCourseDirectoryResult">
	    <include refid="selectDirectoryVo"/>
		where name=#{name} and parent_id = #{parentId}
		and del_flag = '0'
	</select>

	<select id="selectDirectoryById" parameterType="Long" resultMap="TrainCourseDirectoryResult">
		select d.id, d.parent_id, d.parent_ids, d.name, d.order_num, d.del_flag,d.status,
			(select name from train_course_directory where id = d.parent_id) parent_name
		from train_course_directory d
		where d.id = #{id}
	</select>
	
	<insert id="insertDirectory" parameterType="TrainCourseDirectory">
 		insert into train_course_directory(
 			<if test="id != null and id != 0">id,</if>
 			<if test="parentId != null and parentId != 0">parent_id,</if>
 			<if test="name != null and name != ''">name,</if>
 			<if test="parentIds != null and parentIds != ''">parent_ids,</if>
 			<if test="orderNum != null and orderNum != ''">order_num,</if>
 			<if test="createBy != null and createBy != ''">create_by,</if>
 			create_time,
			status
 		)values(
 			<if test="id != null and id != 0">#{id},</if>
 			<if test="parentId != null and parentId != 0">#{parentId},</if>
 			<if test="name != null and name != ''">#{name},</if>
 			<if test="parentIds != null and parentIds != ''">#{parentIds},</if>
 			<if test="orderNum != null and orderNum != ''">#{orderNum},</if>
 			<if test="createBy != null and createBy != ''">#{createBy},</if>
 			sysdate(),
			#{status}
 		)
	</insert>
	
	<update id="updateDirectory" parameterType="TrainCourseDirectory">
 		update train_course_directory
 		<set>
 			<if test="parentId != null and parentId != 0">parent_id = #{parentId},</if>
 			<if test="name != null and name != ''">name = #{name},</if>
 			<if test="parentIds != null and parentIds != ''">parent_ids = #{parentIds},</if>
 			<if test="orderNum != null and orderNum != ''">order_num = #{orderNum},</if>
 			<if test="updateBy != null and updateBy != ''">update_by = #{updateBy},</if>
			status = #{status},
 			update_time = sysdate()
 		</set>
 		where id = #{id}
	</update>
	
	<update id="updateDirectoryChildren" parameterType="java.util.List">
	    update train_course_directory set parent_ids =
	    <foreach collection="ids" item="item" index="index"
	        separator=" " open="case id" close="end">
	        when #{item.id} then #{item.parentIds}
	    </foreach>
	    where id in
	    <foreach collection="ids" item="item" index="index"
	        separator="," open="(" close=")">
	        #{item.id}
	    </foreach>
	 </update>

    <update id="updateDirectoryByParentId">
		UPDATE train_course_directory a
		INNER JOIN train_course_directory b ON a.id = b.id
		SET a.`status` = 1,
		a.update_by = #{updateBy}
		WHERE
			FIND_IN_SET( #{id}, b.parent_ids )
			OR b.id = #{id}
	</update>

    <delete id="deleteDirectoryById" parameterType="Long">
		update train_course_directory set del_flag = '1' where id = #{id}
	</delete>

	<select id="selectByNameAndParentId" resultMap="TrainCourseDirectoryResult">
		<include refid="selectDirectoryVo"/>
		where name = #{name} and parent_id = #{parentId} and del_flag = '0'
	</select>
</mapper> 